
Test cases for add_integer function 
===================================

Import the function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

First test case(a positive b positive):
	>>> add_integer(1,2)
	3

Second test case(a positive b negative):
	>>> add_integer(100, -2)
	98

Third test case (a positive b defualt):
	>>> add_integer(2)
	100

Fourth test case (a float b negative):
	>>> add_integer(100.3, -2)
	98

Fifth test case (a +ive int b string):
	>>> add_integer(4, "School")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Sixth test case (a None b defualt):
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Seventh test case (Overflow 1):
	>>> add_integer(float('inf'), float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
